<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.mycore</groupId>
    <artifactId>mycore-parent</artifactId>
    <version>51</version>
  </parent>
  <artifactId>dbt-module</artifactId>
  <version>2022.06-SNAPSHOT</version>
  <name>DBT: Application Module</name>
  <url>http://www.db-thueringen.de</url>
  <licenses>
    <license>
      <name>GNU General Public License, version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <issueManagement>
    <system>JIRA</system>
    <url>https://mycore.atlassian.net/browse/DBT</url>
  </issueManagement>
  <scm>
    <connection>scm:git:https://github.com/ThULB/dbt.git</connection>
    <developerConnection>scm:git:https://github.com/ThULB/dbt.git</developerConnection>
    <url>https://github.com/ThULB/dbt/tree/master</url>
    <tag>HEAD</tag>
  </scm>
  <properties>
    <grunt.projectBase>${project.build.directory}/grunt</grunt.projectBase>
    <java.target.version>17</java.target.version>
    <lesscss.compress>true</lesscss.compress>
    <maven.compiler.failOnWarning>true</maven.compiler.failOnWarning>
    <maven.compiler.release>${java.target.version}</maven.compiler.release>
    <media.projectBase>${project.build.directory}/media</media.projectBase>
    <mir.version>2022.06.3-SNAPSHOT</mir.version>
    <node.version>v16.19.1</node.version>
    <npm.version>6.14.18</npm.version>
    <rcclient.projectBase>${project.build.directory}/rcclient</rcclient.projectBase>
    <template.assetsdir>${template.targetdir}/dbt/assets</template.assetsdir>
    <template.cssdir>${template.targetdir}/dbt/css</template.cssdir>
    <template.targetdir>${project.build.directory}/classes/META-INF/resources</template.targetdir>
    <toolchain.jdk.version>[${java.target.version},)</toolchain.jdk.version>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-toolchains-plugin</artifactId>
          <configuration>
            <toolchains>
              <jdk>
                <version>${toolchain.jdk.version}</version>
              </jdk>
            </toolchains>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>toolchain</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <configuration>
            <failOnUnsupportedJava>false</failOnUnsupportedJava>
            <failOnMissingClasses>false</failOnMissingClasses>
            <failOnUnresolvableSignatures>false</failOnUnresolvableSignatures>
            <bundledSignatures>
              <bundledSignature>jdk-unsafe</bundledSignature>
              <bundledSignature>jdk-deprecated</bundledSignature>
            </bundledSignatures>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <versionRange>[1.6,)</versionRange>
                    <goals>
                      <goal>update-project-license</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <versionRange>[1.6.1,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <mainClass>de.urmel_dl.dbt.common.DBTVersion</mainClass>
              <addExtensions />
            </manifest>
            <manifestEntries>
              <MCR-Artifact-Id>${project.artifactId}</MCR-Artifact-Id>
              <MCR-Application-Module>${project.name}</MCR-Application-Module>
              <MCR-Auto-Deploy>true</MCR-Auto-Deploy>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <artifactSet>
                <includes>
                  <include>org.glassfish:jakarta.json</include>
                  <include>org.eclipse.persistence:*</include>
                </includes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>de.urmel_dl.dbt.common.DBTVersion</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.2.6</version>
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/de/urmel_dl/dbt/git.properties</generateGitPropertiesFilename>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ssXXX</dateFormat>
          <dateFormatTimeZone>UTC</dateFormatTimeZone>
          <commitIdGenerationMode>full</commitIdGenerationMode>
          <excludeProperties>
            <excludeProperty>.*\.email</excludeProperty>
            <excludeProperty>.*\.host</excludeProperty>
          </excludeProperties>
        </configuration>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <configuration>
          <nodeVersion>${node.version}</nodeVersion>
          <npmVersion>${npm.version}</npmVersion>
          <installDirectory>${settings.localRepository}/node-npm-${node.version}-${npm.version}</installDirectory>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <execution>
            <id>webapp-deps</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${grunt.projectBase}</workingDirectory>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>webapp-build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${grunt.projectBase}</workingDirectory>
              <arguments>--verbose --resourceDirectory=${basedir}/src/main/resources/META-INF/resources/
                --lessFile=${basedir}/src/main/less/build.less
                --targetDirectory=${template.targetdir} --cssDirectory=${template.cssdir}
                --assetsDirectory=${template.assetsdir}</arguments>
            </configuration>
          </execution>
          <execution>
            <id>rcclient-deps</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${rcclient.projectBase}</workingDirectory>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <!-- invoke goal with mvn frontend:grunt -->
            <id>default-cli</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${rcclient.projectBase}</workingDirectory>
              <arguments>--verbose</arguments>
            </configuration>
          </execution>
          <execution>
            <id>media-deps</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${media.projectBase}</workingDirectory>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>media-build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <workingDirectory>${media.projectBase}</workingDirectory>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>create-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${grunt.projectBase}</outputDirectory>
              <resources>
                <resource>
                  <filtering>true</filtering>
                  <directory>${basedir}/src/main/grunt</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>rcclient-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${rcclient.projectBase}</outputDirectory>
              <resources>
                <resource>
                  <filtering>true</filtering>
                  <directory>${basedir}/src/main/rcclient</directory>
                  <includes>
                    <include>GruntFile.js</include>
                    <include>package.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>media-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${media.projectBase}</outputDirectory>
              <resources>
                <resource>
                  <filtering>true</filtering>
                  <directory>${basedir}/src/main/media</directory>
                  <includes>
                    <include>package.json</include>
                    <include>tsconfig.json</include>
                    <include>webpack.config.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mycore.plugins</groupId>
        <artifactId>datamodel-plugin</artifactId>
        <version>0.7</version>
        <executions>
          <execution>
            <goals>
              <goal>schema</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Facilitates downloading source and javadoc in Eclipse -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <verbose>false</verbose>
          <addSvnKeyWords>true</addSvnKeyWords>
          <licenseName>gpl_v3</licenseName>
        </configuration>
        <executions>
          <execution>
            <id>download-licenses</id>
            <goals>
              <goal>update-project-license</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <ciManagement>
    <system>bamboo</system>
    <url>https://bamboo.mycore.de/browse/DBT</url>
  </ciManagement>
  <repositories>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.moxy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-acl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-base</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-mods</artifactId>
      <exclusions>
        <exclusion>
          <!-- Do not resolve dependencies from https://dev.bibsonomy.org/maven2 -->
          <groupId>org.bibsonomy</groupId>
          <artifactId>bibsonomy-bibtex-parser</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-solr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-user2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-viewer</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore.mir</groupId>
      <artifactId>mir-module</artifactId>
      <exclusions>
        <exclusion>
          <!-- Do not resolve dependencies from https://dev.bibsonomy.org/maven2 -->
          <groupId>org.bibsonomy</groupId>
          <artifactId>bibsonomy-bibtex-parser</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.hk2</groupId>
      <artifactId>hk2-api</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-activation_1.1_spec</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-http</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-servlet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework</groupId>
      <artifactId>jersey-test-framework-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-base</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>build-deploy-package</id>
      <activation>
        <property>
          <name>deploy-package</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.mycore.mir</groupId>
          <artifactId>mir-cli</artifactId>
          <type>tar.gz</type>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.mycore.mir</groupId>
          <artifactId>mir-webapp</artifactId>
          <type>war</type>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <outputDirectory>${project.build.directory}/bin</outputDirectory>
                  <resources>
                    <resource>
                      <filtering>true</filtering>
                      <directory>${basedir}/src/deploy/bin</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <finalName>dbt-deploy-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${basedir}/src/deploy/assembly/deploy.xml</descriptor>
              </descriptors>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>single</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.mycore.mir</groupId>
        <artifactId>mir-parent</artifactId>
        <version>${mir.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>org.eclipse.persistence.moxy</artifactId>
        <version>3.0.3</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>jakarta.json</artifactId>
        <version>2.0.1</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.geronimo.specs</groupId>
        <artifactId>geronimo-activation_1.1_spec</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
